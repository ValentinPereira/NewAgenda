//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace newagenda.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class customers
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public customers()
        {
            this.appointments = new HashSet<appointments>();
        }
    
        public int idCustomers { get; set; }

        [DisplayName("Nom")]
        // Affichage d'un message erreur si le champs est vide
        [Required(ErrorMessage = "Veuillez saisir une nom")]
        // Affichage d'un message erreur si la chaîne de caractère est supérieure à 50
        [StringLength(50, ErrorMessage = "Votre nom est trop grand")]
        [RegularExpression(@"^[A-Za-zéàèêëïîç\- ]+", ErrorMessage = "Veuillez saisir un nom valide")]
        public string lastname { get; set; }

        [DisplayName("Prénom")]
        [Required(ErrorMessage = "Veuillez saisir un prénom")]
        [StringLength(50, ErrorMessage = "Votre prénom est trop grand")]
        [RegularExpression(@"^[A-Za-zéàèêëïîç\- ]+", ErrorMessage = "Veuillez saisir un prénom valide")]
        public string firstname { get; set; }

        [DisplayName("E-mail")]
        [Required(ErrorMessage = "Veuillez saisir une adresse email")]
        [StringLength(100, ErrorMessage = "L'adresse mail est trop grande")]
        // Affichage d'un message error si la regex ne match pas avec la chaîne de caractère
        [RegularExpression(@"^(([^<>()[\]\\.,;:\s@""]+(\.[^<>()[\]\\.,;:\s@""]+)*)|("".+""))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$", ErrorMessage = "L'adresse mail n'est pas valide")]
        public string mail { get; set; }

        [DisplayName("Numéro de téléphone")]
        [Required(ErrorMessage = "Veuillez saisir un numéro de téléphone")]
        [StringLength(10, ErrorMessage = "Numéro de téléphone doit comporter 10 chiffres")]
        [RegularExpression(@"^0[0-9]{9}$", ErrorMessage = "Le numéro de téléphone est incorrect")]
        public string phonenumber { get; set; }

        [DisplayName("Budget")]
        [Required(ErrorMessage = "Veuillez saisir un budget")]
        [Range(0, Int32.MaxValue, ErrorMessage = "Le budget ne doit pas contenir de caractères")]
        public int budget { get; set; }

        public string concatDescCustomer
        {
            get
            {
                // Concaténer lastname et firstname pour avoir une seule chaîne de caractères
                return string.Format("{0} {1}", lastname, firstname);
            }
        }


        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<appointments> appointments { get; set; }
    }
}
